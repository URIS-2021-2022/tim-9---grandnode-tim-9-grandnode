@model ProductAttributeCombinationModel
@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminPopupLayout.cshtml";
}
@{
    //page title
    if (string.IsNullOrEmpty(Model.Id))
    {
        ViewBag.Title = T("Admin.Catalog.Products.ProductAttributes.AttributeCombinations.AddTitle").Text;
    }
    else
    {
        ViewBag.Title = T("Admin.Catalog.Products.ProductAttributes.AttributeCombinations.Update").Text;
    }
}
@*we add enctype = "multipart/form-data" because "File upload" attribute control type requires it*@
@using (Html.BeginForm("AttributeCombinationPopup", "Product",
   new { productId = Model.ProductId, AttributeCombinationId = Model.Id, btnId = ViewBag.btnId, formId = ViewBag.formId },
   FormMethod.Post,
   false,
   new Dictionary<string, Object> { { "enctype", "multipart/form-data" } })
)
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false)
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.ProductId)

    <div class="row">
        <div class="col-md-12">
            <div class="portlet light form-fit">
                <div class="portlet-title">
                    <div class="caption">
                        <i class="fa fa-cube"></i>
                        @if (string.IsNullOrEmpty(Model.Id))
                        {
                            @T("Admin.Catalog.Products.ProductAttributes.AttributeCombinations.AddTitle")
                        }
                        else
                        {
                            @T("Admin.Catalog.Products.ProductAttributes.AttributeCombinations.Update")
                        }
                    </div>
                    <div class="actions">
                        <button class="btn btn-success" type="submit" name="save"><i class="fa fa-check"></i> @T("Admin.Common.Save") </button>
                    </div>
                </div>
                <div class="portlet-body">
                    <div class="form-horizontal">
                        <div class="form-body">
                            @if (Model.Warnings.Count > 0)
                            {
                                <div class="message-box message-box-error">
                                    @foreach (var warning in Model.Warnings)
                                    {
                                        @warning
                                        <br />
                                    }
                                </div>
                            }
                            @if (string.IsNullOrEmpty(Model.Id))
                            {
                                @Html.Partial("_ProductAttributes", Model.ProductAttributes)
                            }
                            else
                            {
                                <div class="form-group">
                                    <label class="control-label col-sm-3">
                                        @T("Admin.Catalog.Products.ProductAttributes.AttributeCombinations.Fields.Attributes")
                                    </label>
                                    <div class="col-md-9 col-sm-9">
                                        <text>@Html.Raw(Model.AttributesXML)</text>
                                    </div>
                                </div>

                            }
                            <br />
                        </div>
                    </div>
                    <div class="form-horizontal">
                        <div class="form-body">
                            @if (!Model.UseMultipleWarehouses)
                            {
                                <div class="form-group">
                                    @Html.GrandLabelFor(model => model.StockQuantity, new Dictionary<string, object> { { "class", "col-sm-3" } })
                                    <div class="col-md-9 col-sm-9">
                                        @Html.GrandEditorFor(model => model.StockQuantity)
                                        @Html.ValidationMessageFor(model => model.StockQuantity)
                                    </div>
                                </div>
                            }
                            else
                            {
                            <div class="form-group" id="pnlMultipleWarehouses">
                                
                                <div class="col-md-9 col-sm-9">
                                    @if (Model.WarehouseInventoryModels.Count > 0)
                                    {
                                        <table style="width: 600px; border-collapse: collapse;">
                                            <thead>
                                                <tr>
                                                    <th>
                                                        @T("Admin.Catalog.Products.ProductWarehouseInventory.Fields.Warehouse")
                                                    </th>
                                                    <th align="center">
                                                        @T("Admin.Catalog.Products.ProductWarehouseInventory.Fields.WarehouseUsed")
                                                    </th>
                                                    <th align="center">
                                                        @T("Admin.Catalog.Products.ProductWarehouseInventory.Fields.StockQuantity")
                                                    </th>
                                                    <th align="center">
                                                        @T("Admin.Catalog.Products.ProductWarehouseInventory.Fields.ReservedQuantity")
                                                    </th>
                                                    <th align="center">
                                                        @T("Admin.Catalog.Products.ProductWarehouseInventory.Fields.PlannedQuantity")
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.WarehouseInventoryModels)
                                                {
                                                    <tr style="height:40px;">
                                                        <td style="width: 35%;">
                                                            <div style="padding-left: 5px; padding-right: 5px;">
                                                                @item.WarehouseName
                                                            </div>
                                                        </td>
                                                        <td align="center" style="width: 10%;">
                                                            <label class="mt-checkbox mt-checkbox-outline">
                                                                <input type="checkbox" id="warehouse_used_@(item.WarehouseId)" name="warehouse_used_@(item.WarehouseId)" value="@item.WarehouseId" checked="@item.WarehouseUsed" />
                                                                <span></span>
                                                            </label>
                                                            <script type="text/javascript">
                                                                $(document).ready(function() {
                                                                    $("#warehouse_used_@(item.WarehouseId)").change(toggleWarehouseUsed_@(item.WarehouseId));
                                                                    $("#warehouse_qty_@(item.WarehouseId)").kendoNumericTextBox({
                                                                        format: "#",
                                                                        decimals: 0,
                                                                        min:0,
                                                                    });
                                                                    $("#warehouse_reserved_@(item.WarehouseId)").kendoNumericTextBox({
                                                                        format: "#",
                                                                        decimals: 0,
                                                                        min: 0,
                                                                    });
                                                                    toggleWarehouseUsed_@(item.WarehouseId)();
                                                                });

                                                                function toggleWarehouseUsed_@(item.WarehouseId)() {

                                                                    var numerictextboxQty = $("#warehouse_qty_@(item.WarehouseId)").data("kendoNumericTextBox");
                                                                    var numerictextboxRes = $("#warehouse_reserved_@(item.WarehouseId)").data("kendoNumericTextBox");

                                                                    if ($('#warehouse_used_@(item.WarehouseId)').is(':checked')) {
                                                                        numerictextboxQty.enable(true);
                                                                        numerictextboxRes.enable(true);

                                                                    } else {
                                                                        numerictextboxQty.enable(false);
                                                                        numerictextboxRes.enable(false);
                                                                    }
                                                                }
                                                            </script>
                                                        <td align="center" style="width: 20%;">
                                                                <input id="warehouse_qty_@(item.WarehouseId)" name="warehouse_qty_@(item.WarehouseId)" type="number" value="@item.StockQuantity" style="width: 70px;"/>
                                                        </td>
                                                        <td align="center" style="width: 20%;">
                                                            <input id="warehouse_reserved_@(item.WarehouseId)" name="warehouse_reserved_@(item.WarehouseId)" type="number" value="@item.ReservedQuantity" style="width: 70px;" />
                                                        </td>
                                                        <td align="center" style="width: 20%;">
                                                            @item.PlannedQuantity
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>                                       
                                    }
                                    else
                                    {
                                        @T("Admin.Catalog.Products.ProductWarehouseInventory.Fields.Warehouse.NotDefined")
                                    }
                                </div>
                            </div>
                            }
                            <div class="form-group">
                                @Html.GrandLabelFor(model => model.AllowOutOfStockOrders, new Dictionary<string, object> { { "class", "col-sm-3" } })
                                <div class="col-md-9 col-sm-9">
                                    <label class="mt-checkbox mt-checkbox-outline">
                                        @Html.EditorFor(model => model.AllowOutOfStockOrders)
                                        <span></span>
                                    </label>
                                    @Html.ValidationMessageFor(model => model.AllowOutOfStockOrders)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.GrandLabelFor(model => model.Sku, new Dictionary<string, object> { { "class", "col-sm-3" } })
                                <div class="col-md-9 col-sm-9">
                                    @Html.GrandEditorFor(model => model.Sku)
                                    @Html.ValidationMessageFor(model => model.Sku)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.GrandLabelFor(model => model.ManufacturerPartNumber, new Dictionary<string, object> { { "class", "col-sm-3" } })
                                <div class="col-md-9 col-sm-9">
                                    @Html.GrandEditorFor(model => model.ManufacturerPartNumber)
                                    @Html.ValidationMessageFor(model => model.ManufacturerPartNumber)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.GrandLabelFor(model => model.Gtin, new Dictionary<string, object> { { "class", "col-sm-3" } })
                                <div class="col-md-9 col-sm-9">
                                    @Html.GrandEditorFor(model => model.Gtin)
                                    @Html.ValidationMessageFor(model => model.Gtin)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.GrandLabelFor(model => model.OverriddenPrice, new Dictionary<string, object> { { "class", "col-sm-3" } })
                                <div class="col-md-9 col-sm-9">
                                    @Html.GrandEditorFor(model => model.OverriddenPrice)
                                    @Html.ValidationMessageFor(model => model.OverriddenPrice)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.GrandLabelFor(model => model.NotifyAdminForQuantityBelow, new Dictionary<string, object> { { "class", "col-sm-3" } })
                                <div class="col-md-9 col-sm-9">
                                    @Html.EditorFor(model => model.NotifyAdminForQuantityBelow)
                                    @Html.ValidationMessageFor(model => model.NotifyAdminForQuantityBelow)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    if (ViewBag.RefreshPage == true)
    {
    <script type="text/javascript">
        try {window.opener.document.forms['@(Context.Request.Query["formId"])'].@(Context.Request.Query["btnId"]).click();}
        catch (e){}
        window.close();
    </script>
    }



}